import webbrowser
from urllib.parse import urlparse, parse_qs
import sys
import time
import colorama
from colorama import Fore, Style

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è colorama –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ü–≤–µ—Ç–∞–º–∏ –≤ Windows
colorama.init()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
def print_gradient(text, start_color=(0, 255, 0), end_color=(255, 0, 255)):
    """–í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º –æ—Ç start_color –∫ end_color"""
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ü–≤–µ—Ç–∞ –∏–∑ RGB –≤ ANSI
    def rgb_to_ansi(r, g, b):
        return f"\033[38;2;{r};{g};{b}m"
    
    # –°–æ–∑–¥–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç
    length = len(text)
    gradient = []
    for i in range(length):
        r = int(start_color[0] + (end_color[0] - start_color[0]) * i / length)
        g = int(start_color[1] + (end_color[1] - start_color[1]) * i / length)
        b = int(start_color[2] + (end_color[2] - start_color[2]) * i / length)
        gradient.append(f"{rgb_to_ansi(r, g, b)}{text[i]}")
    
    print(''.join(gradient) + Style.RESET_ALL)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º"""
    title = "‚ú® AlgoTool - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è Algoritmika ‚ú®"
    options = [
        "1. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ –ø—Ä–æ–µ–∫—Ç–∞—Ö",
        "2. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ Unity",
        "3. –°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ-–ø—Ä–æ–µ–∫—Ç",
        "4. –í–∑—è—Ç—å –ø—Ä–æ–µ–∫—Ç —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ —Ä–µ–º–∏–∫—Å–∞–º–∏",
        "5. –ê–ª–≥–∞ –≤ –∞–ª–≥–µ",
        "6. –ü–æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∞–≤—É",
        "99. –í—ã—Ö–æ–¥"
    ]
    
    print_gradient(title)
    print("\n" + "-" * 50)
    for option in options:
        print_gradient(option)
    print("-" * 50)
    
    return input("\n–í–∞—à –≤—ã–±–æ—Ä: ")

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
def main():
    while True:
        choice = main_menu()
        
        if choice == "1":
            print_gradient("\nüîç –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ –ø—Ä–æ–µ–∫—Ç–µ")
            url = input("–í–≤–µ–¥–∏—Ç–µ URL –ø—Ä–æ–µ–∫—Ç–∞: ").strip()
            
            parsed_url = urlparse(url)
            query_params = parse_qs(parsed_url.query)
            project_id = query_params.get('projectId')
            
            if not project_id:
                print_gradient("‚ùå –û—à–∏–±–∫–∞: projectId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ URL", (255, 0, 0), (255, 0, 0))
            else:
                new_url = f"https://learn.algoritmika.org/api/v1/projects/info/{project_id[0]}"
                print_gradient(f"üåê –û—Ç–∫—Ä—ã–≤–∞—é: {new_url}")
                webbrowser.open(new_url)
        
        elif choice == "2":
            print_gradient("\nüéÆ –°–æ–∑–¥–∞–Ω–∏–µ Unity –ø—Ä–æ–µ–∫—Ç–∞")
            webbrowser.open("https://learn.algoritmika.org/uploads/student/619666/unity/58183083/unity/2.html")
        
        elif choice == "3":
            print_gradient("\nüé• –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ-–ø—Ä–æ–µ–∫—Ç–∞")
            webbrowser.open("https://learn.algoritmika.org/storage/project-previews/a7fa4541aa19c55ec78180d04541e3d9.svg?t=1753976010")
            webbrowser.open("https://learn.algoritmika.org/laboratory")
        
        elif choice == "4":
            print_gradient("\nüîí –î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–µ–∫—Ç—É —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ —Ä–µ–º–∏–∫—Å–∞–º–∏")
            tutorial = (
                "\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
                "1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞\n"
                "2. –í —Ä–∞–∑–¥–µ–ª–µ 'meta' –Ω–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è 'scratchid' –∏–ª–∏ 'pythonid'\n"
                "3. –í –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç Python –∏–ª–∏ Scratch\n"
                "4. –í –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∑–∞–º–µ–Ω–∏—Ç–µ —Ü–∏—Ñ—Ä—ã ID –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\n"
            )
            print_gradient(tutorial)
        
        elif choice == "5":
            print_gradient("\nüß© –ê–ª–≥–∞ –≤ –∞–ª–≥–µ")
            print_gradient("–û—Ç–∫—Ä—ã–≤–∞—é —Å–±–æ—Ä–Ω–∏–∫ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤...")
            webbrowser.open("https://learn.algoritmika.org/uploads/student/70069026/unity/58330901/VseAlgoPacki/index.html")
        
        elif choice == "6":
            print_gradient("\nüñºÔ∏è –ü–æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∞–≤—É")
            print_gradient("–û—Ç–∫—Ä—ã–≤–∞—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞...")
            webbrowser.open("https://learn.algoritmika.org/uploads/student/368074/6897a56d11c3a.html")
        
        elif choice == "99":
            print_gradient("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            time.sleep(1)
            sys.exit()
        
        else:
            print_gradient("\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∏–∑ –º–µ–Ω—é", (255, 0, 0), (255, 0, 0))
        
        # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –º–µ–Ω—é
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
        print("\n" * 3)  # –ù–µ—Å–∫–æ–ª—å–∫–æ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print_gradient("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        sys.exit(0)
